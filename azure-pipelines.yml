# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:


trigger:
- main

pool:
  name: Default


stages:
- stage: test
  jobs:
  - job: snyk
    pool:
      name: 'Azure Pipelines'
    steps:  
    - script: |
        git clone https://gitlab.com/Fx62/pokemones.git app
      displayName: 'Clone Repo'    
    - task: SnykSecurityScan@1
      inputs:
        serviceConnectionEndpoint: 'personal'
        testType: 'app'
        severityThreshold: 'high'
        monitorWhen: 'always'
        failOnIssues: true
        organization: 'xandradx-k4jGToaGrTise7iv5uhtGE'
        testDirectory: '$(Build.SourcesDirectory)/app'
      displayName: 'Scan Code'

- stage: build
  jobs:
  - job: node
    container: docker.io/node:latest
    steps:
    - script: |
        git clone https://gitlab.com/Fx62/pokemones.git app
      displayName: 'Clone Repo'
    - script: |
        cd app
        npm install
        npm run build
      displayName: 'Build App'
    - publish: $(System.DefaultWorkingDirectory)/app/dist
      artifact: dist     
- stage: deploy
  jobs:
  - job: openshift
    container: registry.redhat.io/openshift4/ose-cli@sha256:303e86e76d23b56c70cc7dec51c9590caac6edff6cbfb691e2dd89842597b18b
    steps: 
    - download: current
      artifact: dist
    - script: |
        export NAMESPACE=test-app-jandrade2
        export APPNAME=app
        export VERSION=v5
        set +x
        oc login ${OS_URL} -u ${USERNAME} -p ${PASSWORD} --insecure-skip-tls-verify=true
        oc new-project ${NAMESPACE} || oc project ${NAMESPACE}
        oc get is ${APPNAME} && oc new-build --name ${APPNAME} --image-stream=openshift/nginx:1.20-ubi9 --binary --to=${APPNAME}:${VERSION} -o yaml |oc replace -f - || oc new-build --name ${APPNAME} --image-stream=openshift/nginx:1.20-ubi9 --binary --to=${APPNAME}:${VERSION} -o yaml |oc apply -f - 
        oc start-build ${APPNAME}  --from-dir $(Pipeline.Workspace)/dist --follow
        oc create deployment ${APPNAME} --image=image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${APPNAME}:${VERSION} --port 8080 -o yaml --dry-run=client|oc apply -f - 
        oc rollout status deployment ${APPNAME}
        oc expose deployment ${APPNAME} -o yaml --dry-run=client |oc apply -f -
        oc expose service ${APPNAME} -o yaml --dry-run=client |oc apply -f -
        ROUTE=$(oc get route ${APPNAME} -o jsonpath="{.spec.host}")
        echo "Check The APP Here: http://${ROUTE}"
      displayName: 'Publish APP'
    - task: SnykSecurityScan@1
      inputs:
        serviceConnectionEndpoint: 'personal'
        testType: 'container'
        dockerImageName: 'image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${APPNAME}:${VERSION}'
        severityThreshold: 'high'
        monitorWhen: 'always'
        failOnIssues: true
      displayName: "Scan Image"
